{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","views/PhoneBookView/PhoneBookView.module.css","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","redux/phoneBook/phoneBook-operations.js","Components/Form/Form.jsx","redux/phoneBook/phoneBook-selectors.js","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","views/PhoneBookView/PhoneBookView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","axios","defaults","baseURL","Form","useState","name","setName","setNumber","dispatch","useDispatch","nameInputId","shortid","numberInputId","handleChange","e","target","console","warn","className","s","form","onSubmit","preventDefault","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","alert","htmlFor","label","type","input","placeholder","onChange","Button","variant","add_btn","getLoading","state","phoneBook","loading","getError","getFilter","getFilteredContacts","createSelector","contacts","allContacts","filtered","normalizedFilter","toLowerCase","includes","ContactsList","useSelector","onDelete","useCallback","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","list","map","btn","onClick","Filter","filterContact","PhoneBookView","useEffect","getContactRequest","getContactSuccess","getContactError","phonebook","color","height","width","timeout"],"mappings":"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","file":"static/js/ContactsPage.eaf2927c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhoneBookView_phonebook__nehx5\"};","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3biEX\",\"label\":\"Form_label__1KqSV\",\"input\":\"Form_input__xT_rG\",\"add_btn\":\"Form_add_btn__2YuCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3Bw0z\",\"item\":\"ContactsList_item__CuA1f\",\"name\":\"ContactsList_name__1Pvkl\",\"btn\":\"ContactsList_btn__2KhUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3fT3c\",\"label\":\"Filter_label__NcPhs\"};","import axios from 'axios';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from './phoneBook-actions';\n\n// ОПЕРАЦИЯ ВСЕГДА ИСПОЛЬЗУЕТ ТРИ ЭКШЕНА - REQUEST,SUCCESS,ERROR\n\n// axios.defaults.baseURL = 'http://localhost:3000/';\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport const addContact = ({ name, number }) => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', { name, number })\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport const getContact = () => dispatch => {\n  dispatch(getContactRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(getContactSuccess(data)))\n    .catch(error => dispatch(getContactError(error.message)));\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phoneBook/phoneBook-operations';\nimport shortid from 'shortid';\nimport s from './Form.module.css';\nimport { Button } from 'react-bootstrap';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Field type ${name} is not processed`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name || !number) {\n      alert('Enter name and phone number!');\n      return;\n    }\n    // onSubmit();\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId} className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <label htmlFor={numberInputId} className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          className={s.input}\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n        />\n      </label>\n\n      <Button variant=\"primary\" type=\"submit\" className={s.add_btn}>\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n","import { createSelector } from '@reduxjs/toolkit';\n\n// селекторы всегда получают весь state\n\nexport const getLoading = state => state.phoneBook.loading;\n\nexport const getError = state => state.phoneBook.error;\n\nexport const getAllContacts = state => state.phoneBook.contacts;\n\nexport const getFilter = state => state.phoneBook.filter;\n\n// мемоизация\n// в createselector передаем те селекторы, от которых зависит мемоизированный селектор\n// если с предыдущего allContacts и filtered не изменились, то фильтр не произойдет, а из кеша вернутся старые данные\n\nexport const getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filtered) => {\n    const normalizedFilter = filtered.toLowerCase();\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/phoneBook/phoneBook-operations';\nimport { getFilteredContacts } from '../../redux/phoneBook/phoneBook-selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\nimport { Button } from 'react-bootstrap';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDelete = useCallback(id => dispatch(deleteContact(id)), [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.name}>{name}:</span>{' '}\n          <span className={s.number}>{number}</span>\n          <Button\n            className={s.btn}\n            variant=\"outline-secondary\"\n            onClick={() => onDelete(id)}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  // addContactRequest,\n  // addContactSuccess,\n  // addContactError,\n  // deleteContact,\n  filterContact,\n} from '../../redux/phoneBook/phoneBook-actions';\nimport { getFilter } from '../../redux/phoneBook/phoneBook-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  // useCallback мемоизирует функцию\n  const onChange = useCallback(e => dispatch(filterContact(e.target.value)), [\n    dispatch,\n  ]);\n\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"\" className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search\"\n          className={s.input}\n          value={filter}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport s from './PhoneBookView.module.css';\nimport Form from '../../Components/Form';\nimport ContactsList from '../../Components/ContactsList';\nimport Filter from '../../Components/Filter';\nimport { getContact } from '../../redux/phoneBook/phoneBook-operations';\nimport {\n  getLoading,\n  getError,\n} from '../../redux/phoneBook/phoneBook-selectors';\n\nconst PhoneBookView = () => {\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getContact()), [dispatch]);\n\n  return (\n    <div className={s.phonebook}>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {loading && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#424141\"\n          height={60}\n          width={60}\n          timeout={3000}\n        />\n      )}\n      {error && <p>Oops! Something went wrong...</p>}\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default PhoneBookView;\n"],"sourceRoot":""}