{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducers.js","redux/store.js","Components/Navigation/Navigation.jsx","Components/AuthNav/AuthNav.jsx","Components/UserMenu/UserMenu.jsx","Components/AppBar/AppBar.jsx","Components/PrivateRoute.jsx","Components/PublicRoute.jsx","App.js","index.js","redux/auth/auth-selectors.js","Components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","Components/Navigation/Navigation.module.css","Components/AppBar/AppBar.module.css","redux/auth/auth-actions.js","App.module.css"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","filterContact","contacts","createReducer","state","payload","find","name","number","alert","filter","id","_","loading","error","combineReducers","initialUserState","email","user","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","Navigation","IsAuthenticated","useSelector","getIsAuthenticated","Nav","className","exact","to","s","link","AuthNav","Button","variant","UserMenu","getUsername","dispatch","useDispatch","onLogout","useCallback","logout","user_menu","user_profile","Avatar","src","text","type","onClick","logout_btn","AppBar","Navbar","collapseOnSelect","expand","bg","navbar","Brand","navbar_brand","Toggle","aria-controls","Collapse","PrivateRoute","children","routeProps","PublicRoute","restricted","HomeView","lazy","LoginView","RegisterView","PhoneBookView","App","useEffect","console","log","getCurrentUser","fallback","color","height","width","timeout","path","ReactDOM","render","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","headers","common","Authorization","register","password","a","registerRequest","post","response","data","message","login","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.3c5c3830.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// экшены добавления контакта\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// экшены удаления контакта\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// єкшены получения контактов с бекенда\nexport const getContactRequest = createAction('contacts/getContactRequest');\nexport const getContactSuccess = createAction('contacts/getContactSuccess');\nexport const getContactError = createAction('contacts/getContactError');\n\n// экшен фильтра\nexport const filterContact = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n  filterContact,\n} from './phoneBook-actions';\n// import { deleteContact } from './phoneBook-operations';\n\n// редюсер на тулкит\nconst contacts = createReducer([], {\n  // добавляем в редюсер только  Success\n  // получение сохраненных контактов с бекенда\n  [getContactSuccess]: (state, { payload }) => payload,\n  // добавление\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(\n      ({ name, number }) => name === payload.name || number === payload.number,\n    )\n      ? alert('This subscriber is already in contacts')\n      : [...state, payload],\n\n  // удаление\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// фильтр\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [getContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n  [getContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport authReducer from './auth/auth-reducers';\n// import persistStore from 'redux-persist/es/persistStore';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    // auth: authReducer,\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n// export default { store };\n","import { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\nimport { Nav } from 'react-bootstrap';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nconst Navigation = () => {\n  const IsAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Nav className=\" mr-auto \">\n      <NavLink exact to=\"/\" className={s.link}>\n        Home\n      </NavLink>\n\n      {IsAuthenticated && (\n        <NavLink to=\"/contacts\" className={s.link}>\n          Contacts\n        </NavLink>\n      )}\n    </Nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport { Button, Nav } from 'react-bootstrap';\n\nconst AuthNav = () => {\n  return (\n    <Nav>\n      <Button variant=\"dark\">\n        <NavLink to=\"/login\">Login</NavLink>\n      </Button>\n      <Button variant=\"dark\">\n        <NavLink to=\"/register\">Sign up</NavLink>\n      </Button>\n    </Nav>\n  );\n};\n\nexport default AuthNav;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './UserMenu.module.css';\nimport { getUsername } from '../../redux/auth/auth-selectors';\nimport { logout } from '../../redux/auth/auth-operations';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from 'react-bootstrap';\n\nconst UserMenu = () => {\n  const name = useSelector(getUsername);\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => dispatch(logout()), [dispatch]);\n\n  return (\n    <div className={s.user_menu}>\n      <div className={s.user_profile}>\n        <Avatar src=\"/broken-image.jpg\" />\n        <p className={s.text}>Welcome, {name}</p>\n      </div>\n      <Button\n        type=\"button\"\n        variant=\"dark\"\n        onClick={onLogout}\n        className={s.logout_btn}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { Navbar } from 'react-bootstrap';\nimport s from './AppBar.module.css';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst AppBar = () => {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n      className={s.navbar}\n    >\n      <Navbar.Brand className={s.navbar_brand}>Phonebook</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default AppBar;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\n// Если маршрут приватный и юзер залогинен, рендерим компонент\n// Если нет - то делаем редирект на страницу логина\n\nconst PrivateRoute = ({ children, ...routeProps }) => {\n  const IsAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {IsAuthenticated ? children : <Redirect to=\"/login\" />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\n// Если маршрут ограниченный (логин, регистрация) и юзер залогинен, то редирект на тел книгу\n// Иначе рендерит компонент\n\nconst PublicRoute = ({ children, ...routeProps }) => {\n  const IsAuthenticated = useSelector(getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {IsAuthenticated && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport s from './App.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppBar from './Components/AppBar';\nimport { Switch, Route } from 'react-router-dom';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"HomePage\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginPage\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterPage\" */),\n);\nconst PhoneBookView = lazy(() =>\n  import('./views/PhoneBookView' /* webpackChunkName: \"ContactsPage\" */),\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('useEffect instead componentDidMount');\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className={s.App}>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#424141\"\n            height={60}\n            width={60}\n            timeout={3000}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PublicRoute path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\">\n            <PhoneBookView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// если юзер не залогинен то токен null т е  false, а если залогинен то токен строка т е  true\nexport const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUsername = state => state.auth.user.name;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_menu\":\"UserMenu_user_menu__1OTAX\",\"text\":\"UserMenu_text__2r7rr\",\"logout_btn\":\"UserMenu_logout_btn__2Wxzs\",\"user_profile\":\"UserMenu_user_profile__3k37i\"};","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\n//bearer - носитель set делаем когда юзер зарегистрировался или залогинился, unset - когда вышел\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// регистрация POST /users/signup\nexport const register = ({ name, email, password }) => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', {\n      name,\n      email,\n      password,\n    });\n\n    // при успешной регистрации сетим токен на header авторизации и все последующии запросі идут с єтим токеном\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\n// логин POST /users/login\nexport const login = ({ email, password }) => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', { email, password });\n\n    // и при логине сетим токен в header\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\n// разлогинить POST /users/logout\nexport const logout = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    // при логауте снимаем токен\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\n// получение текущего пользователя (refresh) GET /users/current\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  //забираем токен из стейта\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3k1l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"AppBar_navbar__2wN-q\",\"navbar_brand\":\"AppBar_navbar_brand__1xz1p\"};","import { createAction } from '@reduxjs/toolkit';\n\n// экшены регистрации\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\n// экшены логина\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\n// экшены логаута\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\n// получение текущего пользователя (refresh)\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-logo\":\"App_App-logo__Ss5Cu\",\"App-logo-spin\":\"App_App-logo-spin__31wU-\",\"App-header\":\"App_App-header__3WtqS\",\"App-link\":\"App_App-link__NuFWm\",\"App\":\"App_App__2d50d\",\"input\":\"App_input__2XUwh\"};"],"sourceRoot":""}